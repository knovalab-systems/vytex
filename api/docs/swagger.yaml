basePath: /api/v1
consumes:
- application/json
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.AggregateData:
    properties:
      count: {}
    type: object
  models.DataAuthResponse:
    properties:
      access_token:
        type: string
      expires:
        type: integer
    type: object
  models.LoginUser:
    properties:
      password:
        maxLength: 20
        minLength: 8
        type: string
      username:
        maxLength: 30
        type: string
    required:
    - password
    - username
    type: object
  models.User:
    properties:
      create_at:
        type: string
      delete_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: string
      update_at:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  title: Vytex API
  version: "0.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Given a correct user name and password get access
      parameters:
      - description: User's credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DataAuthResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Login
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Remove the refresh token from the database and delete the cookie
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Logout
      tags:
      - Auth
  /auth/refresh:
    post:
      description: Given a correct refresh cookie get access
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DataAuthResponse'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Refresh
      tags:
      - Auth
  /users:
    get:
      description: Get all the user, limit for query o default limit
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get users from db
      tags:
      - Users
  /users/{userId}:
    post:
      description: Updates the role of a user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: User update values
        in: body
        name: models.UpdateUserBody
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update role
      tags:
      - Users
  /users/aggregate:
    get:
      description: Get an aggregate function from users resource
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AggregateData'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get aggregate from users
      tags:
      - Users
swagger: "2.0"
